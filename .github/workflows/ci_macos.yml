name: Lambda CI on macOS

on:
  push:
  pull_request:

env:
  CMAKE_VERSION: 3.10.0
  SEQAN3_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: macos-11
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "gcc12"
            cxx: "g++-12"
            cc: "gcc-12"
            build_type: Release

          - name: "gcc10"
            cxx: "g++-10"
            cc: "gcc-10"
            build_type: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: lambda
          fetch-depth: 2
          submodules: recursive

      - name: Configure Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install CMake
        run: bash ./lambda/submodules/seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install ccache
        run: bash ./lambda/submodules/seqan3/.github/workflows/scripts/install_via_brew.sh ccache

      - name: Install compiler ${{ matrix.cxx }}
        run: bash ./lambda/submodules/seqan3/.github/workflows/scripts/install_via_brew.sh gcc $(echo "${{ matrix.cxx }}" | sed "s/g++-//g")

      - name: Load ccache
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-

      - name: Tool versions
        run: |
          env cmake --version
          env ${{ matrix.cxx }} --version

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          mkdir build
          cd build
          cmake ../lambda -DLAMBDA_COMPILE_THREADS=3 -DLAMBDA_NATIVE_BUILD=ON -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache

      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: 500M
        run: |
          ccache -p || true
          cd build
          make -k -j3 cli_test
          ccache -s || true

      - name: Run tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: 500M
        run: |
          cd build
          ctest . -j3 --output-on-failure
